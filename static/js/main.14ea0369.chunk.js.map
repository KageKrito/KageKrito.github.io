{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/Resume/Resume.js","components/Skills/Skills.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/FunProjectContainer/FunProjectContainer.js","components/FunProjects/FunProjects.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","hooks/useActiveSection.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","_ref","children","themeName","setThemeName","useState","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","_jsx","Provider","value","toggleTheme","name","localStorage","setItem","header","homepage","title","about","role","description","_jsxs","_Fragment","href","target","rel","resume","social","linkedin","github","projects","stack","sourceCode","funProjects","skills","category","short","items","progress","logo","logo_outline","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","onClick","length","htmlFor","id","type","checked","onChange","class","CloseIcon","MenuIcon","Header","About","showResume","setShowResume","prev","GitHubIcon","LinkedInIcon","Resume","Skills","activeSkill","setActiveSkill","selectedCategory","setSelectedCategory","showCategoryNames","setShowCategoryNames","wrapperRef","useRef","sliderRef","categories","map","cat","handleOutsideClick","current","contains","document","removeEventListener","activeBtn","querySelector","slider","offsetLeft","offsetWidth","style","transform","width","renderTooltip","skill","renderSkillItem","handleClick","skillName","position","height","src","alt","ref","filter","flatMap","ProjectContainer","project","item","uniqid","livePreview","LaunchIcon","Projects","toLowerCase","replace","FunProjectContainer","funproject","FunProjects","ScrollToTop","activeSection","isVisible","setIsVisible","toggleVisibility","ArrowUpwardIcon","fontSize","Contact","copied","setCopied","display","gap","flexWrap","justifyContent","alignItems","navigator","clipboard","writeText","setTimeout","currentTarget","blur","top","left","color","Footer","Date","getFullYear","sectionIds","App","setActiveSection","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","root","threshold","el","getElementById","observe","disconnect","useActiveSection","documentElement","onClose","render"],"mappings":"+aAGA,MAAMA,EAAeC,0BAEfC,EAAgBC,IAAmB,IAAlB,SAAEC,GAAUD,EACjC,MAAOE,EAAWC,GAAgBC,mBAAS,SAE3CC,qBAAU,KACR,MAAMC,EAAiBC,OAAOC,WAAW,gCACzCL,EAAaG,EAAeG,QAAU,OAAS,SAC/CH,EAAeI,iBAAiB,UAAWC,IACzCR,EAAaQ,EAAEF,QAAU,OAAS,cAEnC,IAQH,OACEG,cAACf,EAAagB,SAAQ,CAACC,MAAO,CAAC,CAAEZ,YAAWa,YAP1BA,KAClB,MAAMC,EAAqB,SAAdd,EAAuB,QAAU,OAC9Ce,aAAaC,QAAQ,YAAaF,GAClCb,EAAaa,MAI8Cf,SACxDA,KCxBDkB,EAAS,CAEbC,SAAU,2BACVC,MAAO,OAGHC,EAAQ,CAEZN,KAAM,gBACNO,KAAM,8BACNC,YACEC,eAAAC,WAAA,CAAAzB,SAAA,CACEW,cAAA,MAAAX,SAAI,cACJwB,eAAA,KAAAxB,SAAA,CAAG,uDACyD,IAC5DW,cAAA,KACEe,KAAK,4BACLC,OAAO,SACPC,IAAI,sBAAqB5B,SAC1B,6CAEG,uDAIJW,cAAA,MAAAX,SAAI,cACJwB,eAAA,KAAAxB,SAAA,CAAG,8IAC0IW,cAAA,SAAM,yHAInJA,cAAA,MAAAX,SAAI,eACJwB,eAAA,KAAAxB,SAAA,CAAG,iHAC6GW,cAAA,SAAM,2IAItHA,cAAA,MAAAX,SAAI,iBACJW,cAAA,KAAAX,SAAG,wIAKP6B,OACEL,eAAAC,WAAA,CAAAzB,SAAA,CACEW,cAAA,MAAAX,SAAI,kBACJwB,eAAA,KAAAxB,SAAA,CAAG,YACQW,cAAA,SAAM,gCAIjBA,cAAA,MAAAX,SAAI,WACJwB,eAAA,KAAAxB,SAAA,CAAG,cACUW,cAAA,SAAM,qDAInBA,cAAA,MAAAX,SAAI,mBACJwB,eAAA,KAAAxB,SAAA,CAAG,wBACoBW,cAAA,SAAM,sDACwBA,cAAA,SACnDA,cAAA,SAAM,wBACeA,cAAA,SAAM,2DAI7BA,cAAA,MAAAX,SAAI,eACJwB,eAAA,KAAAxB,SAAA,CAAG,yCACqCW,cAAA,SAAM,oDACEA,cAAA,SAAM,sDAItDA,cAAA,MAAAX,SAAI,SACJwB,eAAA,KAAAxB,SAAA,CAAG,MACEW,cAAA,SAAM,aAKfmB,OAAQ,CACNC,SAAU,uBACVC,OAAQ,iCAINC,EAAW,CAGf,CACElB,KAAM,aACNQ,YACEC,eAAAC,WAAA,CAAAzB,SAAA,CACEW,cAAA,MAAAX,SAAI,gBACJwB,eAAA,KAAAxB,SAAA,CAAG,oGAC8FW,cAAA,KAAGe,KAAK,mCAAmCC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,kBAAiB,IAACW,cAAA,SAAM,wFAI9MA,cAAA,MAAAX,SAAI,oBACJW,cAAA,KAAAX,SAAG,6LAIHW,cAAA,MAAAX,SAAI,kBACJwB,eAAA,KAAAxB,SAAA,CAAG,8EACwEW,cAAA,KAAGe,KAAK,4BAA4BC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,8CAAwC,aAASW,cAAA,SAAM,qBAC7L,IAAIA,cAAA,KAAGe,KAAK,6BAA6BC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,gBAAgB,IAAC,IACvHW,cAAA,KAAGe,KAAK,kCAAkCC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,mBAAmB,IAAC,IACxGW,cAAA,KAAGe,KAAK,6BAA6BC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,sBAAsB,IAAC,IACtGW,cAAA,KAAGe,KAAK,6BAA6BC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,sBAAqB,OAAK,IACzGW,cAAA,KAAGe,KAAK,+BAA+BC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,kBAAiB,UAItGkC,MAAO,CAAC,SAAU,aAAc,SAAU,aAAc,QAAS,MAAO,QACxEC,WAAY,gDAgEVC,EAAc,CAGlB,CACErB,KAAM,2BACNQ,YACEC,eAAAC,WAAA,CAAAzB,SAAA,CACEW,cAAA,MAAAX,SAAI,gBACJwB,eAAA,KAAAxB,SAAA,CAAG,+EACyEW,cAAA,SAAM,2HAIlFA,cAAA,MAAAX,SAAI,oBACJwB,eAAA,KAAAxB,SAAA,CACEW,cAAA,UAAAX,SAAQW,cAAA,KAAGe,KAAK,wDAAwDC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,sBAA4BW,cAAA,SAAM,oEACnFA,cAAA,SAAM,wDAClBA,cAAA,QAAAX,SAAM,QAAU,IAACW,cAAA,SAAM,yGAC0BA,cAAA,SACtGA,cAAA,YAEFa,eAAA,KAAAxB,SAAA,CACEW,cAAA,UAAAX,SAAQW,cAAA,KAAGe,KAAK,wDAAwDC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,qBAA2BW,cAAA,SAAM,2EAC3EA,cAAA,SAAM,uFACMA,cAAA,SAAM,0JAC6DA,cAAA,SACvJA,cAAA,YAEFa,eAAA,KAAAxB,SAAA,CACEW,cAAA,UAAAX,SAAQW,cAAA,KAAGe,KAAK,wDAAwDC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,yBAA+BW,cAAA,SAAM,iFACzEA,cAAA,SAAM,wFACCA,cAAA,SAAM,gKACkEA,cAAA,SAC7JA,cAAA,YAEFa,eAAA,KAAAxB,SAAA,CACEW,cAAA,UAAAX,SAAQW,cAAA,KAAGe,KAAK,wDAAwDC,OAAO,SAASC,IAAI,sBAAqB5B,SAAC,mBAAyBW,cAAA,SAAM,kFAClEA,cAAA,QAAAX,SAAM,QAAU,IAACW,cAAA,SAAM,sFACnBA,cAAA,QAAAX,SAAM,6BAAqC,IAACW,cAAA,SAAM,sFAClDA,cAAA,QAAAX,SAAM,qBAA6B,UAI5HkC,MAAO,CAAC,OAAQ,SAAU,UAC1BC,WAAY,0DAIVE,EAAS,CAGb,CACEC,SAAU,UACVC,MAAO,KACPC,MAAO,CACL,CAACzB,KAAM,OACL0B,SAAU,KACVC,KAAM,yCACNC,aAAc,iDAChB,CAAC5B,KAAM,SACL0B,SAAU,KACVC,KAAM,2CACNC,aAAc,mDAChB,CAAC5B,KAAM,MACL0B,SAAU,KACVC,KAAM,8CACNC,aAAc,sDAChB,CAAC5B,KAAM,QACL0B,SAAU,KACVC,KAAM,0CACNC,aAAc,oDAGpB,CACEL,SAAU,WACVC,MAAO,KACPC,MAAO,CACL,CAACzB,KAAM,OACL0B,SAAU,KACVC,KAAM,0CACNC,aAAc,kDAChB,CAAC5B,KAAM,MACL0B,SAAU,KACVC,KAAM,yCACNC,aAAc,iDAChB,CAAC5B,KAAM,aACL0B,SAAU,KACVC,KAAM,+CACNC,aAAc,uDAChB,CAAC5B,KAAM,aACL0B,SAAU,KACVC,KAAM,+CACNC,aAAc,yDAGpB,CACEL,SAAU,QACVC,MAAO,QACPC,MAAO,CACL,CAACzB,KAAM,UACL0B,SAAU,KACVC,KAAM,2CACNC,aAAc,mDAChB,CAAC5B,KAAM,MACL0B,SAAU,KACVC,KAAM,wCACNC,aAAc,gDAChB,CAAC5B,KAAM,SACL0B,SAAU,KACVC,KAAM,2CACNC,aAAc,qDAGpB,CACEL,SAAU,YACVC,MAAO,OACPC,MAAO,CACL,CAACzB,KAAM,QACL0B,SAAU,KACVC,KAAM,0CACNC,aAAc,kDAChB,CAAC5B,KAAM,UACL0B,SAAU,KACVC,KAAM,4CACNC,aAAc,oDAChB,CAAC5B,KAAM,OACL0B,SAAU,KACVC,KAAM,yCACNC,aAAc,iDAChB,CAAC5B,KAAM,QACL0B,SAAU,KACVC,KAAM,0CACNC,aAAc,kDAChB,CAAC5B,KAAM,KACL0B,SAAU,KACVC,KAAM,yCACNC,aAAc,oDAKhBC,EAEG,8B,4CC5NMC,MAhGAA,KACb,OAAO,UAAE5C,EAAS,YAAEa,IAAiBgC,qBAAWlD,IACzCmD,EAAaC,GAAkB7C,oBAAS,GAEzC8C,EAAgBA,IAAMD,GAAgBD,GAE5C,OACEvB,eAAA,OAAK0B,UAAU,aAAYlD,SAAA,CACzBwB,eAAA,MAAI0B,UAAW,cAAaH,EAAc,OAAS,IAAK/C,SAAA,CACrDqB,EAAMN,KACLJ,cAAA,MAAIuC,UAAU,iBAAgBlD,SAC5BW,cAAA,KACEe,KAAK,OACLyB,QAASF,EACTC,UAAU,iBAAgBlD,SAC3B,YAID,KAEHqC,EAAOe,OACNzC,cAAA,MAAIuC,UAAU,iBAAgBlD,SAC5BW,cAAA,KACEe,KAAK,UACLyB,QAASF,EACTC,UAAU,iBAAgBlD,SAC3B,aAID,KAEHiC,EAASmB,OACRzC,cAAA,MAAIuC,UAAU,iBAAgBlD,SAC5BW,cAAA,KACEe,KAAK,YACLyB,QAASF,EACTC,UAAU,iBAAgBlD,SAC3B,eAID,KAEHoC,EAAYgB,OACXzC,cAAA,MAAIuC,UAAU,iBAAgBlD,SAC5BW,cAAA,KACEe,KAAK,eACLyB,QAASF,EACTC,UAAU,iBAAgBlD,SAC3B,mBAID,KAEH4C,EACCjC,cAAA,MAAIuC,UAAU,iBAAgBlD,SAC5BW,cAAA,KACEe,KAAK,WACLyB,QAASF,EACTC,UAAU,iBAAgBlD,SAC3B,cAID,QAGNW,cAAA,OAAKuC,UAAU,eAAclD,SAC3BwB,eAAA,SAAO6B,QAAQ,wBAAuBrD,SAAA,CACpCW,cAAA,SACE2C,GAAG,wBACHC,KAAK,WACLC,QAAuB,SAAdvD,EACTwD,SAAU3C,IAEZH,cAAA,YAAU+C,MAAM,MAAM3C,KAAK,UAC3BJ,cAAA,YAAU+C,MAAM,OAAO3C,KAAK,SAC5BJ,cAAA,QAAMuC,UAAU,gBAIpBvC,cAAA,UACE4C,KAAK,SACLJ,QAASF,EACTC,UAAU,+BACV,aAAW,oBAAmBlD,SAE7B+C,EAAcpC,cAACgD,IAAS,IAAMhD,cAACiD,IAAQ,U,MC1EjCC,MAnBAA,KACb,MAAM,SAAE1C,EAAQ,MAAEC,GAAUF,EAE5B,OACEM,eAAA,UAAQ0B,UAAU,gBAAelD,SAAA,CAC/BW,cAAA,MAAAX,SACGmB,EACCR,cAAA,KAAGe,KAAMP,EAAU+B,UAAU,OAAMlD,SAChCoB,IAGHA,IAGJT,cAACkC,EAAM,Q,uCCkCEiB,MA/CD/D,IAAoC,IAAnC,WAAEgE,EAAU,cAAEC,GAAejE,EAC1C,MAAM,KAAEgB,EAAI,KAAEO,EAAI,YAAEC,EAAW,OAAEO,GAAWT,EAE5C,OACEG,eAAA,OAAK0B,UAAU,eAAclD,SAAA,CAC1Be,GACCS,eAAA,MAAAxB,SAAA,CAAI,WACWwB,eAAA,QAAM0B,UAAU,cAAalD,SAAA,CAAEe,EAAK,UAIpDO,GAAQE,eAAA,MAAI0B,UAAU,cAAalD,SAAA,CAAC,KAAGsB,EAAK,OAC7CX,cAAA,OAAKuC,UAAU,cAAalD,SAAEuB,GAAeA,IAE7CC,eAAA,OAAK0B,UAAU,wBAAuBlD,SAAA,CACpCW,cAAA,UAAQ4C,KAAK,SAASJ,QAASA,IAAMa,GAAcC,IAASA,IAAOf,UAAU,mBAAkBlD,SAC5F+D,EAAa,eAAiB,WAGhCjC,GACCN,eAAAC,WAAA,CAAAzB,SAAA,CACG8B,EAAOE,QACNrB,cAAA,KACEe,KAAMI,EAAOE,OACb,aAAW,SACXkB,UAAU,kBAAiBlD,SAE3BW,cAACuD,IAAU,MAIdpC,EAAOC,UACNpB,cAAA,KACEe,KAAMI,EAAOC,SACb,aAAW,WACXmB,UAAU,kBAAiBlD,SAE3BW,cAACwD,IAAY,gB,MC3BdC,MAZAA,KACX,MAAM,OAAEvC,GAAWR,EAEnB,OACAG,eAAA,WAAS0B,UAAU,iBAAgBlD,SAAA,CACnCW,cAAA,MAAIuC,UAAU,eAAclD,SAAE,WAC9BW,cAAA,OAAKuC,UAAU,iBAAgBlD,SAC1B6B,Q,MCqJMwC,MA3JAA,KACb,IAAKhC,EAAOe,OAAQ,OAAO,KAE3B,MAAOkB,EAAaC,GAAkBpE,mBAAS,OACxCqE,EAAkBC,GAAuBtE,mBAAS,QAClDuE,EAAmBC,GAAwBxE,oBAAS,GACrDyE,EAAaC,iBAAO,MACpBC,EAAYD,iBAAO,MACnBE,EAAa,CAAC,SAAU1C,EAAO2C,KAAIC,IAAG,CAAO3C,SAAU2C,EAAI3C,SAAUC,MAAO0C,EAAI1C,WAMtFnC,qBAAU,KACR,MAAM8E,EAAsBxE,IACtBkE,EAAWO,UAAYP,EAAWO,QAAQC,SAAS1E,EAAEiB,SACvD4C,EAAe,OAKnB,OADAc,SAAS5E,iBAAiB,QAASyE,GAC5B,IAAMG,SAASC,oBAAoB,QAASJ,KAClD,IAEH9E,qBAAU,KACR,MAAMmF,EAAYF,SAASG,cAAc,2BACnCC,EAASX,EAAUK,QAEzB,GAAII,GAAaE,EAAQ,CACvB,MAAM,WAAEC,EAAU,YAAEC,GAAgBJ,EACpCE,EAAOG,MAAMC,UAAY,cAAcH,OACvCD,EAAOG,MAAME,MAAQ,GAAGH,SAEzB,CAACnB,IAEJ,MAAMuB,EAAiBC,GACrB,GAAGA,EAAMjF,eAAUiF,EAAMvD,SAAWuD,EAAMvD,SAAW,MAGjDwD,EAAmBD,GACvBrF,cAAA,MAAqBuC,UAAU,oBAAmBlD,SAChDwB,eAAA,OAAK0B,UAAY,eAAclD,SAAA,CAC7BwB,eAAA,UACE+B,KAAK,SACLL,UAAU,iBACVC,QAASA,KAAM+C,OApCFC,EAoCcH,EAAMjF,UAnCvCwD,GAAgBN,GAAUA,IAASkC,EAAY,KAAOA,IADnCA,OAqCb,aAAY,uBAAuBH,EAAMjF,OACzC6E,MAAO,CACLQ,SAAU,WACVN,MAAO,OACPO,OAAQ,OACR,aAAcL,EAAMvD,UACpBzC,SAAA,CAGFW,cAAA,OACE2F,IAAKN,EAAMtD,KACX6D,IAAKP,EAAMjF,KACXmC,UAAU,eAIZvC,cAAA,OACE2F,IAAKN,EAAMrD,cAAgBqD,EAAMtD,KACjC6D,IAAK,GAAGP,EAAMjF,eACdmC,UAAU,0BAIdvC,cAAA,QAAMuC,UAAW,YAAWoB,IAAgB0B,EAAMjF,KAAO,kBAAoB,IAAKf,SAC/E+F,EAAcC,SA9BZA,EAAMjF,MA2DjB,OACES,eAAA,WAAS0B,UAAU,iBAAiBI,GAAG,SAAQtD,SAAA,CAC7CW,cAAA,MAAIuC,UAAU,iBAAgBlD,SAAC,WAC/BwB,eAAA,OAAK0B,UAAU,iBAAgBlD,SAAA,CAC7BW,cAAA,OAAKuC,UAAU,gBAAelD,SAC5BwB,eAAA,OAAK0B,UAAU,eAAclD,SAAA,CAC1B+E,EAAWC,KAAKC,IACf,MAAM3C,EAA0B,kBAAR2C,EAAmBA,EAAMA,EAAI3C,SAC/CC,EAAuB,kBAAR0C,EAAmBA,EAAMA,EAAI1C,MAElD,OACE5B,cAAA,UAEE4C,KAAK,SACLL,UAAW,oBAAmBsB,IAAqBlC,EAAW,SAAW,IACzEa,QAASA,IAAMsB,EAAoBnC,GACnClB,MAAOkB,EAAStC,SAEfuC,GANID,MAUX3B,cAAA,OAAKuC,UAAU,SAASsD,IAAK1B,SAIjCnE,cAAA,OAAKuC,UAAU,uBAAsBlD,SACb,QAArBwE,GACC7D,cAAA,OAAKuC,UAAU,mBAAkBlD,SAC/BwB,eAAA,SAAO6B,QAAQ,sBAAqBrD,SAAA,CAClCW,cAAA,SACE4C,KAAK,WACLD,GAAG,sBACHE,QAASkB,EACTjB,SAAUA,IAAMkB,GAAsBD,KACtC,cACS/D,cAAA,UAAAX,SAAS0E,EAAoB,QAAU,kBAM1D/D,cAAA,OACEuC,UAAW,iBAAiBwB,GAA0C,QAArBF,EAA2C,GAAd,aAC9EgC,IAAK5B,EAAW5E,SAEhBW,cAAA,OAAKuC,UAAU,wBAAuBlD,SAnEnB,QAArBwE,GAA+BE,EAO5BrC,EACJoE,QAAOxB,GAA4B,QAArBT,GAA8BS,EAAI3C,WAAakC,IAC7DQ,KAAIC,GACHzD,eAAA,OAAwB0B,UAAU,eAAclD,SAAA,EACvB,QAArBwE,GAA8BE,IAC9B/D,cAAA,MAAIuC,UAAU,wBAAuBlD,SAAEiF,EAAI3C,WAE7C3B,cAAA,OAAKuC,UAAU,cAAalD,SACzBiF,EAAIzC,MAAMwC,IAAIiB,OALThB,EAAI3C,YATTD,EACJqE,SAAQzB,GAAOA,EAAIzC,QACnBwC,IAAIiB,c,sCC5CEU,MArCU5G,IAAA,IAAC,QAAE6G,GAAS7G,EAAA,OACnCyB,eAAA,OAAK0B,UAAU,UAASlD,SAAA,CACtBW,cAAA,MAAAX,SAAK4G,EAAQ7F,OAEbJ,cAAA,OAAKuC,UAAU,uBAAsBlD,SAAE4G,EAAQrF,cAC9CqF,EAAQ1E,OACPvB,cAAA,MAAIuC,UAAU,iBAAgBlD,SAC3B4G,EAAQ1E,MAAM8C,KAAK6B,GAClBlG,cAAA,MAAmBuC,UAAU,sBAAqBlD,SAC/C6G,GADMC,WAOdF,EAAQzE,YACPxB,cAAA,KACEe,KAAMkF,EAAQzE,WACd,aAAW,cACXe,UAAU,kBAAiBlD,SAE3BW,cAACuD,IAAU,MAId0C,EAAQG,aACPpG,cAAA,KACEe,KAAMkF,EAAQG,YACd,aAAW,eACX7D,UAAU,kBAAiBlD,SAE3BW,cAACqG,IAAU,U,MCTJC,MAtBEA,IACVhF,EAASmB,OAGZ5B,eAAA,WAAS8B,GAAG,WAAWJ,UAAU,mBAAkBlD,SAAA,CACjDW,cAAA,MAAIuC,UAAU,iBAAgBlD,SAAC,aAE/BW,cAAA,OAAKuC,UAAU,iBAAgBlD,SAC5BiC,EAAS+C,KAAK4B,GACbjG,cAAA,OAEE2C,GAAIsD,EAAQ7F,KAAKmG,cAAcC,QAAQ,OAAQ,KAC/CjE,UAAU,mBAAkBlD,SAE5BW,cAACgG,EAAgB,CAACC,QAASA,KAJtBE,cATc,K,MCoChBM,MArCarH,IAAA,IAAC,WAAEsH,GAAYtH,EAAA,OACzCyB,eAAA,OAAK0B,UAAU,aAAYlD,SAAA,CACzBW,cAAA,MAAAX,SAAKqH,EAAWtG,OAEhBJ,cAAA,OAAKuC,UAAU,0BAAyBlD,SAAEqH,EAAW9F,cACpD8F,EAAWnF,OACVvB,cAAA,MAAIuC,UAAU,oBAAmBlD,SAC9BqH,EAAWnF,MAAM8C,KAAK6B,GACrBlG,cAAA,MAAmBuC,UAAU,yBAAwBlD,SAClD6G,GADMC,WAOdO,EAAWlF,YACVxB,cAAA,KACEe,KAAM2F,EAAWlF,WACjB,aAAW,cACXe,UAAU,kBAAiBlD,SAE3BW,cAACuD,IAAU,MAIdmD,EAAWN,aACVpG,cAAA,KACEe,KAAM2F,EAAWN,YACjB,aAAW,eACX7D,UAAU,kBAAiBlD,SAE3BW,cAACqG,IAAU,U,MCTJM,MAtBKA,IACblF,EAAYgB,OAGf5B,eAAA,WAAS8B,GAAG,cAAcJ,UAAU,mBAAkBlD,SAAA,CACpDW,cAAA,MAAIuC,UAAU,iBAAgBlD,SAAC,iBAE/BW,cAAA,OAAKuC,UAAU,oBAAmBlD,SAC/BoC,EAAY4C,KAAK4B,GAChBjG,cAAA,OAEE2C,GAAIsD,EAAQ7F,KAAKmG,cAAcC,QAAQ,OAAQ,KAC/CjE,UAAU,sBAAqBlD,SAE/BW,cAACyG,EAAmB,CAACC,WAAYT,KAJ5BE,cATiB,K,uBCoBnBS,MAtBKxH,IAAwB,IAAvB,cAAEyH,GAAezH,EACpC,MAAO0H,EAAWC,GAAgBvH,oBAAS,GAY3C,OAVAC,qBAAU,KACR,MAAMuH,EAAmBA,KACvBD,EAA+B,UAAlBF,IAKf,OAFAlH,OAAOG,iBAAiB,SAAUkH,GAClCA,IACO,IAAMrH,OAAOgF,oBAAoB,SAAUqC,KACjD,CAACH,IAEGC,EACL9G,cAAA,OAAKuC,UAAU,aAAYlD,SACzBW,cAAA,KAAGe,KAAK,OAAO,aAAW,MAAK1B,SAC7BW,cAACiH,IAAe,CAACC,SAAS,cAG5B,M,MCwCSC,MA3DCA,KACd,MAAOC,EAAQC,GAAa7H,oBAAS,GAErC,IAAKyC,EAAe,OAAO,KAS3B,OACEpB,eAAA,WAAS0B,UAAU,yBAAyBI,GAAG,UAAStD,SAAA,CACtDW,cAAA,MAAIuC,UAAU,iBAAgBlD,SAAC,YAC/BwB,eAAA,OACEoE,MAAO,CACLqC,QAAS,OACTC,IAAK,OACLC,SAAU,OACVC,eAAgB,SAChBC,WAAY,SACZjC,SAAU,YACVpG,SAAA,CAEFW,cAAA,KAAGe,KAAM,UAAUkB,IAAgB5C,SACjCW,cAAA,QAAM4C,KAAK,SAASL,UAAU,mBAAkBlD,SAAC,4BAKnDwB,eAAA,OAAKoE,MAAO,CAAEQ,SAAU,YAAapG,SAAA,CACnCW,cAAA,UACE4C,KAAK,SACLL,UAAU,mBACVC,QA9BoBzC,IAC5B4H,UAAUC,UAAUC,UAAU5F,GAC9BoF,GAAU,GACVS,YAAW,IAAMT,GAAU,IAAQ,KACnCtH,EAAEgI,cAAcC,QA0BsB3I,SAC/B,4BAGA+H,GACCpH,cAAA,OACEiF,MAAO,CACLQ,SAAU,WACVwC,IAAK,UACLC,KAAM,MACNhD,UAAW,mBACXgC,SAAU,SACViB,MAAO,SACP9I,SACH,6B,MC3CE+I,MARAA,IACbpI,cAAA,UAAQuC,UAAU,SAAQlD,SACxBwB,eAAA,QAAM0B,UAAU,eAAclD,SAAA,CAAC,SAC1B,IAAIgJ,MAAOC,cAAc,sB,MCHlC,MAAMC,EAAa,CAAC,QAAS,WAAY,SAAU,WCwDpCC,MA5CHA,KACV,OAAO,UAAElJ,IAAe6C,qBAAWlD,GAC7B4H,EDZO,WACb,MAAOA,EAAe4B,GAAoBjJ,mBAAS+I,EAAW,IAwB9D,OAtBA9I,qBAAU,KACR,MAQMiJ,EAAW,IAAI/I,OAAOgJ,sBARHC,IACvBA,EAAQC,SAAQC,IACVA,EAAMC,gBACRN,EAAiBK,EAAM9H,OAAO2B,SAK8B,CAChEqG,KAAM,KACNC,UAAW,KAQb,OALAV,EAAWM,SAAQlG,IACjB,MAAMuG,EAAKxE,SAASyE,eAAexG,GAC/BuG,GAAIR,EAASU,QAAQF,MAGpB,IAAMR,EAASW,eACrB,IAEIxC,ECbeyC,IACflG,EAAYC,GAAiB7D,oBAAS,GAG7C,OAFAkF,SAAS6E,gBAAgBhH,UAAYjD,EAGnCuB,eAAA,OACE8B,GAAG,MACHJ,UAAW,GAAGjD,QAAgBD,SAAA,CAE9BW,cAAA,OAAKuC,UAAU,mBAAkBlD,SAC/BW,cAACkD,EAAM,CAACX,UAAU,aAGtB1B,eAAA,QAAAxB,SAAA,CACEwB,eAAA,OAAK0B,UAAU,mBAAkBlD,SAAA,CAC/BW,cAAA,OAAK2C,GAAG,QAAOtD,SAACW,cAACmD,EAAK,CAACC,WAAYA,EAAYC,cAAeA,MAC9DrD,cAAA,OAAK2C,GAAG,SAAQtD,SAAE+D,GAAcpD,cAACyD,EAAM,CAAC+F,QAASA,IAAMnG,GAAc,UAGvErD,cAAA,OAAKuC,UAAU,gBAAelD,SAC5BW,cAAA,OAAK2C,GAAG,SAAQtD,SAACW,cAAC0D,EAAM,QAG1B1D,cAAA,OAAKuC,UAAU,kBAAiBlD,SAC9BW,cAAA,OAAK2C,GAAG,WAAUtD,SAACW,cAACsG,EAAQ,QAG9BtG,cAAA,OAAKuC,UAAU,sBAAqBlD,SAClCW,cAAA,OAAK2C,GAAG,cAAatD,SAACW,cAAC2G,EAAW,QAGpC3G,cAAA,OAAKuC,UAAU,mBAAkBlD,SAC/BW,cAAA,OAAK2C,GAAG,UAAStD,SAACW,cAACmH,EAAO,WAI5BnH,cAAC4G,EAAW,CAACC,cAAeA,IAC5B7G,cAACoI,EAAM,Q,MChDbqB,iBACEzJ,cAACb,EAAa,CAAAE,SACZW,cAACwI,EAAG,MAEN9D,SAASyE,eAAe,W","file":"static/js/main.14ea0369.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\r\n    darkMediaQuery.addEventListener('change', (e) => {\r\n      setThemeName(e.matches ? 'dark' : 'light')\r\n    });\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n","const header = {\r\n  // all the properties are optional - can be left empty or deleted\r\n  homepage: 'https://oliverheckel.com',\r\n  title: 'OH.',\r\n}\r\n\r\nconst about = {\r\n  // all the properties are optional - can be left empty or deleted\r\n  name: 'Oliver Heckel',\r\n  role: 'Student of Computer Science',\r\n  description: (\r\n    <>\r\n      <h4>Education</h4>\r\n      <p>\r\n        I&apos;m a sixth-semester Computer Science student at the{' '}\r\n      <a\r\n        href=\"https://uni-tuebingen.de/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Eberhard Karls University of Tübingen\r\n      </a>\r\n      , Germany, pursuing a Bachelor of Science degree.\r\n      </p>\r\n\r\n      <h4>Interests</h4>\r\n      <p>\r\n        I am particularly interested in machine learning and artificial intelligence, especially their applications in solving real-world problems.<br />\r\n        I enjoy exploring new models and techniques and understanding how intelligent systems can be designed and improved.\r\n      </p>\r\n\r\n      <h4>Motivation</h4>\r\n      <p>\r\n        What drives me in the field of computer science is the opportunity to build solutions for real-world problems.<br />\r\n        I&apos;m motivated by the constant evolution of technology and the chance to contribute to innovative projects that can make a difference.\r\n      </p>\r\n\r\n      <h4>Future Plans</h4>\r\n      <p>\r\n        After completing my Bachelor&apos;s degree, I plan to pursue a Master of Science in Computer Science to further develop my expertise.\r\n      </p>\r\n    </>\r\n  ),\r\n  resume: (\r\n    <>\r\n      <h4>Personal Data</h4>\r\n      <p>\r\n        Born 2002<br />\r\n        Kirchheim u. Teck, Germany\r\n      </p>\r\n\r\n      <h4>School</h4>\r\n      <p>\r\n        Abitur 2021<br />\r\n        Hölderlin Gymnasium in Nürtingen, Germany\r\n      </p>\r\n\r\n      <h4>Temporary Jobs</h4>\r\n      <p>\r\n        Warehouse Picker 2021<br />\r\n        Lidl Zentrallager STU in Kirchheim u. Teck, Germany<br />\r\n        <br />\r\n        Temporary Helper 2022<br />\r\n        Gustav Magenwirth GmbH & Co. KG in Hülben, Germany\r\n      </p>\r\n\r\n      <h4>University</h4>\r\n      <p>\r\n        Student of Computer Science since 2022<br />\r\n        Eberhard Karls University of Tübingen, Germany<br />\r\n        Bachelor of Science, expected graduation in 2026\r\n      </p>\r\n\r\n      <h4>Work</h4>\r\n      <p>\r\n        ...<br />\r\n        ....\r\n      </p>\r\n    </>\r\n  ),\r\n  social: {\r\n    linkedin: 'https://linkedin.com',\r\n    github: 'https://github.com/KageKrito',\r\n  },\r\n}\r\n\r\nconst projects = [\r\n  // projects can be added and removed\r\n  // if there are no projects, Projects section won't show up\r\n  {\r\n    name: 'mission_db',\r\n    description: (\r\n      <>\r\n        <h5>Description</h5>\r\n        <p>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.\r\n        </p>\r\n        \r\n        <h5>My Contribution</h5>\r\n        <p>\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.\r\n        </p>\r\n\r\n        <h5>Collaborators</h5>\r\n        <p>\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n        </p>\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL', 'React', 'CSS', 'Jest'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  },\r\n  /* {\r\n    name: 'test1',\r\n    description: (\r\n      <>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.<br />\r\n        <br />\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.<br />\r\n        <br />\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  },\r\n  {\r\n    name: 'test2',\r\n    description: (\r\n      <>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.<br />\r\n        <br />\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.<br />\r\n        <br />\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  },\r\n  {\r\n    name: 'test3',\r\n    description: (\r\n      <>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.<br />\r\n        <br />\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.<br />\r\n        <br />\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  }, */\r\n]\r\n\r\nconst funProjects = [\r\n  // projects can be added and removed\r\n  // if there are no projects, Projects section won't show up\r\n  {\r\n    name: 'Minecraft Server Plugins',\r\n    description: (\r\n      <>\r\n        <h5>Description</h5>\r\n        <p>\r\n        These are multiple plugins I developed for Bukkit/Spigot (Minecraft 1.21.4).<br />\r\n        They are designed to enhance the gameplay experience by adding new features and functionalities to Vanilla Minecraft.\r\n        </p>\r\n        \r\n        <h5>List of plugins</h5>\r\n        <p>\r\n          <strong><a href=\"https://github.com/KageKrito/Minecraft-Server-Plugins\" target=\"_blank\" rel=\"noopener noreferrer\">Player Backpack</a></strong><br />\r\n          A plugin that allows players to store items in a shared backpack.<br />\r\n          Players can access the backpack by using the command <code>/bp</code>.<br />\r\n          All players on the server can access the backpack, making it a great way to share items and resources.<br />\r\n          <br />\r\n        </p>\r\n        <p>\r\n          <strong><a href=\"https://github.com/KageKrito/Minecraft-Server-Plugins\" target=\"_blank\" rel=\"noopener noreferrer\">Shulker Viewer</a></strong><br />\r\n          A plugin that allows players to view a preview of the shulker inventory.<br />\r\n          Players can access this preview by right-clicking on a shulker box in the inventory.<br />\r\n          Items in shulker box cannot be changed inside the preview, making it a fast way to check the contents of a shulker box without having to place it down.<br />\r\n          <br />\r\n        </p>\r\n        <p>\r\n          <strong><a href=\"https://github.com/KageKrito/Minecraft-Server-Plugins\" target=\"_blank\" rel=\"noopener noreferrer\">Ender Chest Viewer</a></strong><br />\r\n          A plugin that allows players to view a preview of their ender chest inventory.<br />\r\n          Players can access this preview by right-clicking on an ender chest in the inventory.<br />\r\n          Items in the ender chest cannot be changed inside the preview, making it a fast way to check the contents of the ender chest without having to place it down.<br />\r\n          <br />\r\n        </p>\r\n        <p>\r\n          <strong><a href=\"https://github.com/KageKrito/Minecraft-Server-Plugins\" target=\"_blank\" rel=\"noopener noreferrer\">Comming Soon</a></strong><br />\r\n          Ender Chest Command - Players can access their enderchest by using the command <code>/ec</code>.<br />\r\n          Player Highlighter - Players can highlight a specified player by using the command <code>/highlight &lt;player name&gt;</code>.<br />\r\n          Chest Remote Viewer - Players can view the inventory of a specified chest by using <code>/view &lt;chest id&gt;</code>.\r\n        </p>\r\n      </>\r\n    ),\r\n    stack: ['Java', 'Bukkit', 'Spigot'],\r\n    sourceCode: 'https://github.com/KageKrito/Minecraft-Server-Plugins',\r\n  },\r\n]\r\n\r\nconst skills = [\r\n  // skills can be added or removed\r\n  // if there are no skills, Skills section won't show up\r\n  {\r\n    category: 'Backend',\r\n    short: 'BE',\r\n    items: [\r\n      {name: 'Java',\r\n        progress: '90',\r\n        logo: 'pictures/skill-logos/java-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/java-outline.svg'},\r\n      {name: 'Python',\r\n        progress: '80',\r\n        logo: 'pictures/skill-logos/python-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/python-outline.svg'},\r\n      {name: 'C++',\r\n        progress: '50',\r\n        logo: 'pictures/skill-logos/cplusplus-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/cplusplus-outline.svg'},\r\n      {name: 'Scala',\r\n        progress: '65',\r\n        logo: 'pictures/skill-logos/scala-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/scala-outline.svg'},\r\n    ]\r\n  },\r\n  {\r\n    category: 'Frontend',\r\n    short: 'FE',\r\n    items: [\r\n      {name: 'HTML',\r\n        progress: '75',\r\n        logo: 'pictures/skill-logos/html5-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/html5-outline.svg'},\r\n      {name: 'CSS',\r\n        progress: '80',\r\n        logo: 'pictures/skill-logos/css3-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/css3-outline.svg'},\r\n      {name: 'JavaScript',\r\n        progress: '85',\r\n        logo: 'pictures/skill-logos/javascript-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/javascript-outline.svg'},\r\n      {name: 'TypeScript',\r\n        progress: '85',\r\n        logo: 'pictures/skill-logos/typescript-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/typescript-outline.svg'},\r\n    ]\r\n  },\r\n  {\r\n    category: 'Tools',\r\n    short: 'Tools',\r\n    items: [\r\n      {name: 'VS Code',\r\n        progress: '85',\r\n        logo: 'pictures/skill-logos/vscode-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/vscode-outline.svg'},\r\n      {name: 'Git',\r\n        progress: '85',\r\n        logo: 'pictures/skill-logos/git-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/git-outline.svg'},\r\n      {name: 'Github',\r\n        progress: '90',\r\n        logo: 'pictures/skill-logos/github-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/github-outline.svg'},\r\n    ]\r\n  },\r\n  {\r\n    category: 'Libraries',\r\n    short: 'Libs',\r\n    items: [\r\n      {name: 'NumPy',\r\n        progress: '65',\r\n        logo: 'pictures/skill-logos/numpy-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/numpy-outline.svg'},\r\n      {name: 'PyTorch',\r\n        progress: '55',\r\n        logo: 'pictures/skill-logos/pytorch-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/pytorch-outline.svg'},\r\n      {name: 'Jest',\r\n        progress: '70',\r\n        logo: 'pictures/skill-logos/jest-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/jest-outline.svg'},\r\n      {name: 'React',\r\n        progress: '60',\r\n        logo: 'pictures/skill-logos/react-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/react-outline.svg'},\r\n      {name: 'p5',\r\n        progress: '65',\r\n        logo: 'pictures/skill-logos/p5js-original.svg',\r\n        logo_outline: 'pictures/skill-logos-outline/p5js-outline.svg'},\r\n    ]\r\n  }\r\n]\r\n\r\nconst contact = {\r\n  // email is optional - if left empty Contact section won't show up\r\n  email: 'oliver.heckel2002@gmail.com',\r\n}\r\n\r\nexport { header, about, projects, funProjects, skills, contact }\r\n","import { useContext, useState } from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { ThemeContext } from '../../contexts/theme'\r\nimport { about, skills, projects, funProjects, contact } from '../../portfolio'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\r\n  const [showNavList, setShowNavList] = useState(false)\r\n\r\n  const toggleNavList = () => setShowNavList(!showNavList)\r\n\r\n  return (\r\n    <nav className='center nav'>\r\n      <ul className={`nav__list ${showNavList ? 'show' : ''}`}>\r\n        {about.name ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#top'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              About\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {skills.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#skills'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Skills\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {projects.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#projects'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Projects\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {funProjects.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#funprojects'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Fun Projects\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {contact.email ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#contact'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Contact\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n\r\n      <div className=\"theme-toggle\">\r\n        <label htmlFor=\"theme-toggle-checkbox\">\r\n          <input\r\n            id=\"theme-toggle-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={themeName === 'dark'}\r\n            onChange={toggleTheme}\r\n          />\r\n          <ion-icon class=\"sun\" name=\"sunny\" />\r\n          <ion-icon class=\"moon\" name=\"moon\" />\r\n          <span className=\"toggle\" />\r\n        </label>\r\n      </div>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleNavList}\r\n        className='btn btn--icon nav__hamburger'\r\n        aria-label='toggle navigation'\r\n      >\r\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { header } from '../../portfolio'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n  const { homepage, title } = header\r\n\r\n  return (\r\n    <header className='header center'>\r\n      <h3>\r\n        {homepage ? (\r\n          <a href={homepage} className='link'>\r\n            {title}\r\n          </a>\r\n        ) : (\r\n          title\r\n        )}\r\n      </h3>\r\n      <Navbar />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\r\nimport { about } from '../../portfolio'\r\nimport './About.css'\r\n\r\nconst About = ({ showResume, setShowResume }) => {\r\n  const { name, role, description, social } = about\r\n\r\n  return (\r\n    <div className='about center'>\r\n      {name && (\r\n        <h1>\r\n          Hi, I&apos;m <span className='about__name'>{name},</span>\r\n        </h1>\r\n      )}\r\n\r\n      {role && <h2 className='about__role'>A {role}.</h2>}\r\n      <div className='about__desc'>{description && description}</div>\r\n\r\n      <div className='about__contact center'>\r\n        <button type='button' onClick={() => setShowResume(prev => !prev)} className='btn btn--outline'>\r\n          {showResume ? 'Close Resume' : 'Resume'}\r\n        </button>\r\n\r\n        {social && (\r\n          <>\r\n            {social.github && (\r\n              <a\r\n                href={social.github}\r\n                aria-label='github'\r\n                className='link link--icon'\r\n              >\r\n                <GitHubIcon />\r\n              </a>\r\n            )}\r\n\r\n            {social.linkedin && (\r\n              <a\r\n                href={social.linkedin}\r\n                aria-label='linkedin'\r\n                className='link link--icon'\r\n              >\r\n                <LinkedInIcon />\r\n              </a>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import './Resume.css'\r\nimport { about } from '../../portfolio'\r\n\r\nconst Resume = () => {\r\n    const { resume } = about\r\n\r\n    return (\r\n    <section className='resume-section'>\r\n    <h2 className='resume-title' >Resume</h2>\r\n    <div className='resume-content'>\r\n        {resume}\r\n    </div>\r\n    </section>\r\n)}\r\n\r\nexport default Resume\r\n","import { useState, useRef, useEffect } from 'react'\r\nimport { skills } from '../../portfolio'\r\nimport './Skills.css'\r\n\r\nconst Skills = () => {\r\n  if (!skills.length) return null\r\n\r\n  const [activeSkill, setActiveSkill] = useState(null)\r\n  const [selectedCategory, setSelectedCategory] = useState('All')\r\n  const [showCategoryNames, setShowCategoryNames] = useState(false)\r\n  const wrapperRef = useRef(null)\r\n  const sliderRef = useRef(null)\r\n  const categories = ['All', ...skills.map(cat => ({ category: cat.category, short: cat.short }))]\r\n\r\n  const handleClick = (skillName) => {\r\n    setActiveSkill((prev) => (prev === skillName ? null : skillName))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (e) => {\r\n      if (wrapperRef.current && !wrapperRef.current.contains(e.target)) {\r\n        setActiveSkill(null)\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', handleOutsideClick)\r\n    return () => document.removeEventListener('click', handleOutsideClick)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const activeBtn = document.querySelector('.category-button.active')\r\n    const slider = sliderRef.current\r\n\r\n    if (activeBtn && slider) {\r\n      const { offsetLeft, offsetWidth } = activeBtn\r\n      slider.style.transform = `translateX(${offsetLeft}px)`\r\n      slider.style.width = `${offsetWidth}px`\r\n    }\r\n  }, [selectedCategory])\r\n\r\n  const renderTooltip = (skill) => (\r\n    `${skill.name} • ${skill.progress ? skill.progress : ''}%`\r\n  )\r\n\r\n  const renderSkillItem = (skill) => (\r\n    <li key={skill.name} className=\"skills__list-item\">\r\n      <div className = \"logo-wrapper\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"skill-logo-btn\"\r\n          onClick={() => handleClick(skill.name)}\r\n          aria-label={`Show skill name for ${skill.name}`}\r\n          style={{\r\n            position: 'relative',\r\n            width: '60px',\r\n            height: '60px',\r\n            '--progress': skill.progress,\r\n          }}\r\n        >\r\n          {/* Farbiges Logo (nur unterer Teil sichtbar) */}\r\n          <img\r\n            src={skill.logo}\r\n            alt={skill.name}\r\n            className=\"skill-logo\"\r\n          />\r\n\r\n          {/* Outline-Logo (nur oberer Teil sichtbar) */}\r\n          <img\r\n            src={skill.logo_outline || skill.logo}\r\n            alt={`${skill.name} outline`}\r\n            className=\"skill-logo-outline\"\r\n          />\r\n        </button>\r\n\r\n        <span className={`tooltip ${activeSkill === skill.name ? 'tooltip--active' : ''}`}>\r\n          {renderTooltip(skill)}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  )\r\n\r\n  const renderSkills = () => {\r\n    // Flat list: no category names\r\n    if (selectedCategory === 'All' && !showCategoryNames) {\r\n      return skills\r\n        .flatMap(cat => cat.items)\r\n        .map(renderSkillItem)\r\n    }\r\n\r\n    // Grouped by category\r\n    return skills\r\n      .filter(cat => selectedCategory === 'All' || cat.category === selectedCategory)\r\n      .map(cat => (\r\n        <div key={cat.category} className=\"skills-group\">\r\n          {(selectedCategory !== 'All' || showCategoryNames) && (\r\n            <h4 className=\"skills-category-title\">{cat.category}</h4>\r\n          )}\r\n          <div className=\"skills-list\">\r\n            {cat.items.map(renderSkillItem)}\r\n          </div>\r\n        </div>\r\n      ))\r\n  }\r\n\r\n  return (\r\n    <section className=\"section skills\" id=\"skills\">\r\n      <h2 className=\"section__title\">Skills</h2>\r\n      <div className=\"skills-section\">\r\n        <div className=\"skills-filter\">\r\n          <div className=\"category-bar\">\r\n            {categories.map((cat) => {\r\n              const category = typeof cat === 'string' ? cat : cat.category\r\n              const short = typeof cat === 'string' ? cat : cat.short\r\n\r\n              return (\r\n                <button\r\n                  key={category}\r\n                  type=\"button\"\r\n                  className={`category-button ${selectedCategory === category ? 'active' : ''}`}\r\n                  onClick={() => setSelectedCategory(category)}\r\n                  title={category}\r\n                >\r\n                  {short}\r\n                </button>\r\n              )\r\n            })}\r\n            <div className=\"slider\" ref={sliderRef} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"skills-filter-header\">\r\n          {selectedCategory === 'All' && (\r\n            <div className=\"toggle-cat-names\">\r\n              <label htmlFor=\"show-category-names\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"show-category-names\"\r\n                  checked={showCategoryNames}\r\n                  onChange={() => setShowCategoryNames(!showCategoryNames)}\r\n                />\r\n                Categories <strong>{showCategoryNames ? 'shown' : 'hidden'}</strong>\r\n              </label>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className={`skills__list ${!showCategoryNames && selectedCategory === 'All' ? 'flat-list' : ''}`}\r\n          ref={wrapperRef}\r\n        >\r\n          <div className=\"skills-list-container\">\r\n          {renderSkills()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills","import uniqid from 'uniqid'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\nimport './ProjectContainer.css'\r\n\r\nconst ProjectContainer = ({ project }) => (\r\n  <div className='project'>\r\n    <h3>{project.name}</h3>\r\n\r\n    <div className='project__description'>{project.description}</div>\r\n    {project.stack && (\r\n      <ul className='project__stack'>\r\n        {project.stack.map((item) => (\r\n          <li key={uniqid()} className='project__stack-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {project.sourceCode && (\r\n      <a\r\n        href={project.sourceCode}\r\n        aria-label='source code'\r\n        className='link link--icon'\r\n      >\r\n        <GitHubIcon />\r\n      </a>\r\n    )}\r\n\r\n    {project.livePreview && (\r\n      <a\r\n        href={project.livePreview}\r\n        aria-label='live preview'\r\n        className='link link--icon'\r\n      >\r\n        <LaunchIcon />\r\n      </a>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default ProjectContainer\r\n","import uniqid from 'uniqid'\r\nimport { projects } from '../../portfolio'\r\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\r\nimport './Projects.css'\r\n\r\nconst Projects = () => {\r\n  if (!projects.length) return null\r\n\r\n  return (\r\n    <section id='projects' className='section projects'>\r\n      <h2 className='section__title'>Projects</h2>\r\n\r\n      <div className='projects__grid'>\r\n        {projects.map((project) => (\r\n          <div \r\n            key={uniqid()}\r\n            id={project.name.toLowerCase().replace(/\\s+/g, '-')}\r\n            className='projects-wrapper'\r\n          >\r\n            <ProjectContainer project={project} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import uniqid from 'uniqid'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\nimport './FunProjectContainer.css'\r\n\r\nconst FunProjectContainer = ({ funproject }) => (\r\n  <div className='funproject'>\r\n    <h3>{funproject.name}</h3>\r\n\r\n    <div className='funproject__description'>{funproject.description}</div>\r\n    {funproject.stack && (\r\n      <ul className='funproject__stack'>\r\n        {funproject.stack.map((item) => (\r\n          <li key={uniqid()} className='funproject__stack-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {funproject.sourceCode && (\r\n      <a\r\n        href={funproject.sourceCode}\r\n        aria-label='source code'\r\n        className='link link--icon'\r\n      >\r\n        <GitHubIcon />\r\n      </a>\r\n    )}\r\n\r\n    {funproject.livePreview && (\r\n      <a\r\n        href={funproject.livePreview}\r\n        aria-label='live preview'\r\n        className='link link--icon'\r\n      >\r\n        <LaunchIcon />\r\n      </a>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default FunProjectContainer\r\n","import uniqid from 'uniqid'\r\nimport { funProjects } from '../../portfolio'\r\nimport FunProjectContainer from '../FunProjectContainer/FunProjectContainer'\r\nimport './FunProjects.css'\r\n\r\nconst FunProjects = () => {\r\n  if (!funProjects.length) return null\r\n\r\n  return (\r\n    <section id='funprojects' className='section projects'>\r\n      <h2 className='section__title'>Fun Projects</h2>\r\n\r\n      <div className='funprojects__grid'>\r\n        {funProjects.map((project) => (\r\n          <div \r\n            key={uniqid()}\r\n            id={project.name.toLowerCase().replace(/\\s+/g, '-')}\r\n            className='funprojects-wrapper'\r\n          >\r\n            <FunProjectContainer funproject={project} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default FunProjects\r\n","import React, { useEffect, useState } from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './ScrollToTop.css'\r\n\r\nconst ScrollToTop = ({ activeSection }) => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () => {\r\n      setIsVisible(activeSection !== 'about') // Nur sichtbar, wenn nicht auf der About-Seite\r\n    }\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n    toggleVisibility()\r\n    return () => window.removeEventListener('scroll', toggleVisibility)\r\n  }, [activeSection])\r\n\r\n  return isVisible ? (\r\n    <div className='scroll-top'>\r\n      <a href='#top' aria-label='top'>\r\n        <ArrowUpwardIcon fontSize='large' />\r\n      </a>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import { useState } from 'react'\r\nimport { contact } from '../../portfolio'\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  if (!contact.email) return null\r\n\r\n  const copyEmailToClipboard = (e) => {\r\n    navigator.clipboard.writeText(contact.email)\r\n    setCopied(true)\r\n    setTimeout(() => setCopied(false), 2000) // Show message for 2 seconds\r\n    e.currentTarget.blur() // This removes focus from the button\r\n  }\r\n\r\n  return (\r\n    <section className='section contact center' id='contact'>\r\n      <h2 className='section__title'>Contact</h2>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          gap: '1rem',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <a href={`mailto:${contact.email}`}>\r\n          <span type='button' className='btn btn--outline'>\r\n            📧 Email me\r\n          </span>\r\n        </a>\r\n\r\n        <div style={{ position: 'relative' }}>\r\n          <button\r\n            type='button'\r\n            className='btn btn--outline'\r\n            onClick={copyEmailToClipboard}\r\n          >\r\n            📋 Copy Email\r\n          </button>\r\n          {copied && (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                top: '-1.5rem',\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                fontSize: '0.8rem',\r\n                color: 'green',\r\n              }}\r\n            >\r\n              ✔ Copied!\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import './Footer.css'\r\n\r\nconst Footer = () => (\r\n  <footer className='footer'>\r\n    <span className='footer__link'>\r\n      © {new Date().getFullYear()} Oliver Heckel\r\n    </span>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst sectionIds = ['about', 'projects', 'skills', 'contact']\r\n\r\nexport default function useActiveSection() {\r\n  const [activeSection, setActiveSection] = useState(sectionIds[0])\r\n\r\n  useEffect(() => {\r\n    const handleIntersect = (entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          setActiveSection(entry.target.id)\r\n        }\r\n      })\r\n    }\r\n\r\n    const observer = new window.IntersectionObserver(handleIntersect, {\r\n      root: null,\r\n      threshold: 0.5, // 50% sichtbar\r\n    })\r\n\r\n    sectionIds.forEach(id => {\r\n      const el = document.getElementById(id)\r\n      if (el) observer.observe(el)\r\n    })\r\n\r\n    return () => observer.disconnect()\r\n  }, [])\r\n\r\n  return activeSection\r\n}","import { useContext, useState } from 'react'\r\nimport { ThemeContext } from './contexts/theme'\r\nimport Header from './components/Header/Header'\r\nimport About from './components/About/About'\r\nimport Resume from './components/Resume/Resume'\r\nimport Skills from './components/Skills/Skills'\r\nimport Projects from './components/Projects/Projects'\r\nimport FunProjects from './components/FunProjects/FunProjects'\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\r\nimport Contact from './components/Contact/Contact'\r\nimport Footer from './components/Footer/Footer'\r\nimport './App.css'\r\nimport useActiveSection from './hooks/useActiveSection'\r\n\r\nconst App = () => {\r\n  const [{ themeName }] = useContext(ThemeContext)\r\n  const activeSection = useActiveSection()\r\n  const [showResume, setShowResume] = useState(false)\r\n  document.documentElement.className = themeName;\r\n\r\n  return (\r\n    <div\r\n      id='top'\r\n      className={`${themeName} app`}\r\n    >\r\n      <div className='header-container'>\r\n        <Header className=\"header\"/>\r\n      </div>\r\n      \r\n    <main>\r\n      <div className='centered-section'>\r\n        <div id=\"about\"><About showResume={showResume} setShowResume={setShowResume} /></div>\r\n        <div id=\"resume\">{showResume && <Resume onClose={() => setShowResume(false)} />}</div>\r\n      </div>\r\n      \r\n      <div className='skills-layout'>\r\n        <div id=\"skills\"><Skills /></div>\r\n      </div>\r\n\r\n      <div className='projects-layout'>\r\n        <div id=\"projects\"><Projects /></div>\r\n      </div>\r\n\r\n      <div className='fun-projects-layout'>\r\n        <div id=\"funprojects\"><FunProjects /></div>\r\n      </div>\r\n\r\n      <div className='centered-section'>\r\n        <div id=\"contact\"><Contact /></div>\r\n      </div>\r\n    </main>\r\n\r\n      <ScrollToTop activeSection={activeSection} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { render } from 'react-dom'\r\nimport App from './App'\r\nimport { ThemeProvider } from './contexts/theme'\r\nimport './index.css'\r\n\r\nrender(\r\n  <ThemeProvider>\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}