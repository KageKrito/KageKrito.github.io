{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","hooks/useActiveSection.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","_ref","children","themeName","setThemeName","useState","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","_jsx","Provider","value","toggleTheme","name","localStorage","setItem","header","homepage","title","about","role","description","_jsxs","_Fragment","href","target","rel","resume","social","linkedin","github","projects","stack","sourceCode","skills","category","short","items","logo","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","onClick","length","htmlFor","id","type","checked","onChange","class","CloseIcon","MenuIcon","Header","About","GitHubIcon","LinkedInIcon","ProjectContainer","project","map","item","uniqid","livePreview","LaunchIcon","Projects","toLowerCase","replace","Skills","activeSkill","setActiveSkill","selectedCategory","setSelectedCategory","showCategoryNames","setShowCategoryNames","wrapperRef","useRef","sliderRef","categories","cat","handleOutsideClick","current","contains","document","removeEventListener","activeBtn","querySelector","slider","offsetLeft","offsetWidth","transform","width","renderSkillItem","skill","handleClick","skillName","prev","src","alt","ref","filter","flatMap","ScrollToTop","activeSection","isVisible","setIsVisible","toggleVisibility","ArrowUpwardIcon","fontSize","Contact","copied","setCopied","gap","flexWrap","justifyContent","alignItems","position","navigator","clipboard","writeText","setTimeout","currentTarget","blur","top","left","color","Footer","Date","getFullYear","sectionIds","App","setActiveSection","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","root","threshold","el","getElementById","observe","disconnect","useActiveSection","render"],"mappings":"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","file":"static/js/main.71c5b6ac.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\r\n    darkMediaQuery.addEventListener('change', (e) => {\r\n      setThemeName(e.matches ? 'dark' : 'light')\r\n    });\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n","const header = {\r\n  // all the properties are optional - can be left empty or deleted\r\n  homepage: 'https://oliverheckel.com',\r\n  title: 'OH.',\r\n}\r\n\r\nconst about = {\r\n  // all the properties are optional - can be left empty or deleted\r\n  name: 'Oliver Heckel',\r\n  role: 'Student of Computer Science',\r\n  description: (\r\n    <>\r\n      <h4>Education</h4>\r\n      <p>\r\n        I&apos;m a sixth-semester Computer Science student at the{' '}\r\n      <a\r\n        href=\"https://uni-tuebingen.de/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Eberhard Karls University of Tübingen\r\n      </a>\r\n      , Germany, pursuing a Bachelor of Science degree.\r\n      </p>\r\n\r\n      <h4>Interests</h4>\r\n      <p>\r\n        I am particularly interested in machine learning and artificial intelligence, especially their applications in solving real-world problems.<br />\r\n        I enjoy exploring new models and techniques and understanding how intelligent systems can be designed and improved.\r\n      </p>\r\n\r\n      <h4>Motivation</h4>\r\n      <p>\r\n        What drives me in the field of computer science is the opportunity to build solutions for real-world problems.<br />\r\n        I&apos;m motivated by the constant evolution of technology and the chance to contribute to innovative projects that can make a difference.\r\n      </p>\r\n\r\n      <h4>Future Plans</h4>\r\n      <p>\r\n        After completing my Bachelor&apos;s degree, I plan to pursue a Master of Science in Computer Science to further develop my expertise.\r\n      </p>\r\n    </>\r\n  ),\r\n  resume: 'https://example.com',\r\n  social: {\r\n    linkedin: 'https://linkedin.com',\r\n    github: 'https://github.com/KageKrito',\r\n  },\r\n}\r\n\r\nconst projects = [\r\n  // projects can be added and removed\r\n  // if there are no projects, Projects section won't show up\r\n  {\r\n    name: 'mission_db',\r\n    description: (\r\n      <>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.<br />\r\n        <br />\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.<br />\r\n        <br />\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  },\r\n  /* {\r\n    name: 'test1',\r\n    description: (\r\n      <>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.<br />\r\n        <br />\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.<br />\r\n        <br />\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  },\r\n  {\r\n    name: 'test2',\r\n    description: (\r\n      <>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.<br />\r\n        <br />\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.<br />\r\n        <br />\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  },\r\n  {\r\n    name: 'test3',\r\n    description: (\r\n      <>\r\n        This is a team project developed during the course Teamprojekt (Winter Semester 2024/25) for the <a href=\"https://github.com/brendel-group\" target=\"_blank\" rel=\"noopener noreferrer\">brendel-group</a>.<br />\r\n        mission_db is a web-based application to work with and organize Polybots missions.<br />\r\n        <br />\r\n        I was primarily responsible for implementing the frontend API integration using TypeScript (fetch API), and also contributed to the user interface and other aspects of the application.<br />\r\n        <br />\r\n        This project was a collaborative effort with a team of 6 students from the <a href=\"https://uni-tuebingen.de/\" target=\"_blank\" rel=\"noopener noreferrer\">Eberhard Karls Universität Tübingen</a>, Germany.<br />\r\n        Collaborated with:{' '}<a href=\"https://github.com/sh1negg\" target=\"_blank\" rel=\"noopener noreferrer\">Felix Mycka</a>,{' '}\r\n        <a href=\"https://github.com/pascal260303\" target=\"_blank\" rel=\"noopener noreferrer\">Pascal Kuppler</a>,{' '}\r\n        <a href=\"https://github.com/SamuABC\" target=\"_blank\" rel=\"noopener noreferrer\">Samuel Hempelmann</a>,{' '}\r\n        <a href=\"https://github.com/DerSimi\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappenecker</a> and{' '}\r\n        <a href=\"https://github.com/s-rappold\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Rappold</a>.\r\n      </>\r\n    ),\r\n    stack: ['Python', 'TypeScript', 'Django', 'PostgreSQL'],\r\n    sourceCode: 'https://github.com/brendel-group/mission_db',\r\n  }, */\r\n]\r\n\r\nconst skills = [\r\n  // skills can be added or removed\r\n  // if there are no skills, Skills section won't show up\r\n  {\r\n    category: 'Programming Languages',\r\n    short: 'PL',\r\n    items: [\r\n      {name: 'Java', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/java/java-original.svg'},\r\n      {name: 'Python', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg'},\r\n      {name: 'C++', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/cplusplus/cplusplus-original.svg'},\r\n      {name: 'Scala', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/scala/scala-original.svg'},\r\n      {name: 'JavaScript', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg'},\r\n      {name: 'TypeScript', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg'},\r\n    ]\r\n  },\r\n  {\r\n    category: 'Web Technologies',\r\n    short: 'Web',\r\n    items: [\r\n      {name: 'HTML', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-original.svg'},\r\n      {name: 'CSS', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-original.svg'},\r\n      {name: 'Git', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg'},\r\n    ]\r\n  },\r\n  {\r\n    category: 'Tools & Frameworks',\r\n    short: 'T&F',\r\n    items: [\r\n      {name: 'React', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg'},\r\n      {name: 'Django', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/django/django-plain.svg'},\r\n    ]\r\n  },\r\n  {\r\n    category: 'Libraries',\r\n    short: 'Libs',\r\n    items: [\r\n      {name: 'NumPy', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/numpy/numpy-original.svg'},\r\n      {name: 'PyTorch', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/pytorch/pytorch-original.svg'},\r\n      {name: 'Jest', logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/jest/jest-plain.svg'},\r\n    ]\r\n  }\r\n]\r\n\r\nconst contact = {\r\n  // email is optional - if left empty Contact section won't show up\r\n  email: 'oliver.heckel2002@gmail.com',\r\n}\r\n\r\nexport { header, about, projects, skills, contact }\r\n","import { useContext, useState } from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { ThemeContext } from '../../contexts/theme'\r\nimport { about, projects, skills, contact } from '../../portfolio'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\r\n  const [showNavList, setShowNavList] = useState(false)\r\n\r\n  const toggleNavList = () => setShowNavList(!showNavList)\r\n\r\n  return (\r\n    <nav className='center nav'>\r\n      <ul\r\n        style={{ display: showNavList ? 'flex' : null }}\r\n        className='nav__list'\r\n      >\r\n        {about.name ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#top'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              About\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {projects.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#projects'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Projects\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {skills.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#skills'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Skills\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {contact.email ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#contact'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Contact\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n\r\n      <div className=\"theme-toggle\">\r\n        <label htmlFor=\"theme-toggle-checkbox\">\r\n          <input\r\n            id=\"theme-toggle-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={themeName === 'dark'}\r\n            onChange={toggleTheme}\r\n          />\r\n          <ion-icon class=\"sun\" name=\"sunny\" />\r\n          <ion-icon class=\"moon\" name=\"moon\" />\r\n          <span className=\"toggle\" />\r\n        </label>\r\n      </div>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleNavList}\r\n        className='btn btn--icon nav__hamburger'\r\n        aria-label='toggle navigation'\r\n      >\r\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { header } from '../../portfolio'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n  const { homepage, title } = header\r\n\r\n  return (\r\n    <header className='header center'>\r\n      <h3>\r\n        {homepage ? (\r\n          <a href={homepage} className='link'>\r\n            {title}\r\n          </a>\r\n        ) : (\r\n          title\r\n        )}\r\n      </h3>\r\n      <Navbar />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\r\nimport { about } from '../../portfolio'\r\nimport './About.css'\r\n\r\nconst About = () => {\r\n  const { name, role, description, resume, social } = about\r\n\r\n  return (\r\n    <div className='about center'>\r\n      {name && (\r\n        <h1>\r\n          Hi, I&apos;m <span className='about__name'>{name},</span>\r\n        </h1>\r\n      )}\r\n\r\n      {role && <h2 className='about__role'>A {role}.</h2>}\r\n      <div className='about__desc'>{description && description}</div>\r\n\r\n      <div className='about__contact center'>\r\n        {resume && (\r\n          <a href={resume}>\r\n            <span type='button' className='btn btn--outline'>\r\n              Resume\r\n            </span>\r\n          </a>\r\n        )}\r\n\r\n        {social && (\r\n          <>\r\n            {social.github && (\r\n              <a\r\n                href={social.github}\r\n                aria-label='github'\r\n                className='link link--icon'\r\n              >\r\n                <GitHubIcon />\r\n              </a>\r\n            )}\r\n\r\n            {social.linkedin && (\r\n              <a\r\n                href={social.linkedin}\r\n                aria-label='linkedin'\r\n                className='link link--icon'\r\n              >\r\n                <LinkedInIcon />\r\n              </a>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import uniqid from 'uniqid'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\nimport './ProjectContainer.css'\r\n\r\nconst ProjectContainer = ({ project }) => (\r\n  <div className='project'>\r\n    <h3>{project.name}</h3>\r\n\r\n    <p className='project__description'>{project.description}</p>\r\n    {project.stack && (\r\n      <ul className='project__stack'>\r\n        {project.stack.map((item) => (\r\n          <li key={uniqid()} className='project__stack-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {project.sourceCode && (\r\n      <a\r\n        href={project.sourceCode}\r\n        aria-label='source code'\r\n        className='link link--icon'\r\n      >\r\n        <GitHubIcon />\r\n      </a>\r\n    )}\r\n\r\n    {project.livePreview && (\r\n      <a\r\n        href={project.livePreview}\r\n        aria-label='live preview'\r\n        className='link link--icon'\r\n      >\r\n        <LaunchIcon />\r\n      </a>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default ProjectContainer\r\n","import uniqid from 'uniqid'\r\nimport { projects } from '../../portfolio'\r\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\r\nimport './Projects.css'\r\n\r\nconst Projects = () => {\r\n  if (!projects.length) return null\r\n\r\n  return (\r\n    <section id='projects' className='section projects'>\r\n      <h2 className='section__title'>Projects</h2>\r\n\r\n      <div className='projects__grid'>\r\n        {projects.map((project) => (\r\n          <div \r\n            key={uniqid()}\r\n            id={project.name.toLowerCase().replace(/\\s+/g, '-')}\r\n            className='projects-wrapper'\r\n          >\r\n            <ProjectContainer project={project} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import { useState, useRef, useEffect } from 'react'\r\nimport { skills } from '../../portfolio'\r\nimport './Skills.css'\r\n\r\nconst Skills = () => {\r\n  if (!skills.length) return null\r\n\r\n  const [activeSkill, setActiveSkill] = useState(null)\r\n  const [selectedCategory, setSelectedCategory] = useState('All')\r\n  const [showCategoryNames, setShowCategoryNames] = useState(false)\r\n  const wrapperRef = useRef(null)\r\n  const sliderRef = useRef(null)\r\n  const categories = ['All', ...skills.map(cat => ({ category: cat.category, short: cat.short }))]\r\n\r\n  const handleClick = (skillName) => {\r\n    setActiveSkill((prev) => (prev === skillName ? null : skillName))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (e) => {\r\n      if (wrapperRef.current && !wrapperRef.current.contains(e.target)) {\r\n        setActiveSkill(null)\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', handleOutsideClick)\r\n    return () => document.removeEventListener('click', handleOutsideClick)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const activeBtn = document.querySelector('.category-button.active')\r\n    const slider = sliderRef.current\r\n\r\n    if (activeBtn && slider) {\r\n      const { offsetLeft, offsetWidth } = activeBtn\r\n      slider.style.transform = `translateX(${offsetLeft}px)`\r\n      slider.style.width = `${offsetWidth}px`\r\n    }\r\n  }, [selectedCategory])\r\n\r\n  const renderSkillItem = (skill) => (\r\n    <li key={skill.name} className=\"skills__list-item logo-wrapper\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"skill-logo-btn\"\r\n        onClick={() => handleClick(skill.name)}\r\n        aria-label={`Show skill name for ${skill.name}`}\r\n      >\r\n        <img src={skill.logo} alt={skill.name} className=\"skill-logo\" />\r\n      </button>\r\n      <span className={`tooltip ${activeSkill === skill.name ? 'tooltip--active' : ''}`}>\r\n        {skill.name}\r\n      </span>\r\n    </li>\r\n  )\r\n\r\n  const renderSkills = () => {\r\n    // Flat list: no category names\r\n    if (selectedCategory === 'All' && !showCategoryNames) {\r\n      return skills\r\n        .flatMap(cat => cat.items)\r\n        .map(renderSkillItem)\r\n    }\r\n\r\n    // Grouped by category\r\n    return skills\r\n      .filter(cat => selectedCategory === 'All' || cat.category === selectedCategory)\r\n      .map(cat => (\r\n        <div key={cat.category} className=\"skills-group\">\r\n          {(selectedCategory !== 'All' || showCategoryNames) && (\r\n            <h4 className=\"skills-category-title\">{cat.category}</h4>\r\n          )}\r\n          <div className=\"skills-list\">\r\n            {cat.items.map(renderSkillItem)}\r\n          </div>\r\n        </div>\r\n      ))\r\n  }\r\n\r\n  return (\r\n    <section className=\"section skills\" id=\"skills\">\r\n      <h2 className=\"section__title\">Skills</h2>\r\n      <div className=\"skills-section\">\r\n        <div className=\"skills-filter\">\r\n          <div className=\"category-bar\">\r\n            {categories.map((cat) => {\r\n              const category = typeof cat === 'string' ? cat : cat.category\r\n              const short = typeof cat === 'string' ? cat : cat.short\r\n\r\n              return (\r\n                <button\r\n                  key={category}\r\n                  type=\"button\"\r\n                  className={`category-button ${selectedCategory === category ? 'active' : ''}`}\r\n                  onClick={() => setSelectedCategory(category)}\r\n                  title={category}\r\n                >\r\n                  {short}\r\n                </button>\r\n              )\r\n            })}\r\n            <div className=\"slider\" ref={sliderRef} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"skills-filter-header\">\r\n          {selectedCategory === 'All' && (\r\n            <div className=\"toggle-cat-names\">\r\n              <label htmlFor=\"show-category-names\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"show-category-names\"\r\n                  checked={showCategoryNames}\r\n                  onChange={() => setShowCategoryNames(!showCategoryNames)}\r\n                />\r\n                Categories <strong>{showCategoryNames ? 'shown' : 'hidden'}</strong>\r\n              </label>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className={`skills__list ${!showCategoryNames && selectedCategory === 'All' ? 'flat-list' : ''}`}\r\n          ref={wrapperRef}\r\n        >\r\n          {renderSkills()}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills","import React, { useEffect, useState } from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './ScrollToTop.css'\r\n\r\nconst ScrollToTop = ({ activeSection }) => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () => {\r\n      setIsVisible(activeSection !== 'about') // Nur sichtbar, wenn nicht auf der About-Seite\r\n    }\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n    toggleVisibility()\r\n    return () => window.removeEventListener('scroll', toggleVisibility)\r\n  }, [activeSection])\r\n\r\n  return isVisible ? (\r\n    <div className='scroll-top'>\r\n      <a href='#top' aria-label='top'>\r\n        <ArrowUpwardIcon fontSize='large' />\r\n      </a>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import { useState } from 'react'\r\nimport { contact } from '../../portfolio'\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  if (!contact.email) return null\r\n\r\n  const copyEmailToClipboard = (e) => {\r\n    navigator.clipboard.writeText(contact.email)\r\n    setCopied(true)\r\n    setTimeout(() => setCopied(false), 2000) // Show message for 2 seconds\r\n    e.currentTarget.blur() // This removes focus from the button\r\n  }\r\n\r\n  return (\r\n    <section className='section contact center' id='contact'>\r\n      <h2 className='section__title'>Contact</h2>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          gap: '1rem',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <a href={`mailto:${contact.email}`}>\r\n          <span type='button' className='btn btn--outline'>\r\n            📧 Email me\r\n          </span>\r\n        </a>\r\n\r\n        <div style={{ position: 'relative' }}>\r\n          <button\r\n            type='button'\r\n            className='btn btn--outline'\r\n            onClick={copyEmailToClipboard}\r\n          >\r\n            📋 Copy Email\r\n          </button>\r\n          {copied && (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                top: '-1.5rem',\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                fontSize: '0.8rem',\r\n                color: 'green',\r\n              }}\r\n            >\r\n              ✔ Copied!\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import './Footer.css'\r\n\r\nconst Footer = () => (\r\n  <footer className='footer'>\r\n    <span className='footer__link'>\r\n      © {new Date().getFullYear()} Oliver Heckel\r\n    </span>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst sectionIds = ['about', 'projects', 'skills', 'contact']\r\n\r\nexport default function useActiveSection() {\r\n  const [activeSection, setActiveSection] = useState(sectionIds[0])\r\n\r\n  useEffect(() => {\r\n    const handleIntersect = (entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          setActiveSection(entry.target.id)\r\n        }\r\n      })\r\n    }\r\n\r\n    const observer = new window.IntersectionObserver(handleIntersect, {\r\n      root: null,\r\n      threshold: 0.5, // 50% sichtbar\r\n    })\r\n\r\n    sectionIds.forEach(id => {\r\n      const el = document.getElementById(id)\r\n      if (el) observer.observe(el)\r\n    })\r\n\r\n    return () => observer.disconnect()\r\n  }, [])\r\n\r\n  return activeSection\r\n}","import { useContext } from 'react'\r\nimport { ThemeContext } from './contexts/theme'\r\nimport Header from './components/Header/Header'\r\nimport About from './components/About/About'\r\nimport Projects from './components/Projects/Projects'\r\nimport Skills from './components/Skills/Skills'\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\r\nimport Contact from './components/Contact/Contact'\r\nimport Footer from './components/Footer/Footer'\r\nimport './App.css'\r\nimport { projects } from './portfolio'\r\nimport useActiveSection from './hooks/useActiveSection'\r\n\r\nconst App = () => {\r\n  const [{ themeName }] = useContext(ThemeContext)\r\n  const activeSection = useActiveSection()\r\n\r\n  return (\r\n    <div\r\n      id='top'\r\n      className={`${themeName} app`}\r\n    >\r\n      <div className='header-container'>\r\n        <Header className=\"header\"/>\r\n      </div>\r\n      \r\n    <main>\r\n      <div className='centered-section'>\r\n        <div id=\"about\"><About /></div>\r\n      </div>\r\n      \r\n      <div className='main-layout'>\r\n        <div className='main-content'>\r\n          <div id=\"projects\"><Projects /></div>\r\n        </div>\r\n\r\n        <aside className='sidebar'>\r\n          <div id=\"skills\"><Skills /></div>\r\n          <div className='project-nav'>\r\n            <h3>Projects</h3>\r\n            <ul>\r\n              {projects.map((project) => (\r\n                <li key={project.name}>\r\n                  <a href={`#${project.name.toLowerCase().replace(/\\s+/g, '-')}`}>\r\n                    {project.name}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n\r\n      <div className='centered-section'>\r\n        <div id=\"contact\"><Contact /></div>\r\n      </div>\r\n    </main>\r\n\r\n      <ScrollToTop activeSection={activeSection} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { render } from 'react-dom'\r\nimport App from './App'\r\nimport { ThemeProvider } from './contexts/theme'\r\nimport './index.css'\r\n\r\nrender(\r\n  <ThemeProvider>\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}